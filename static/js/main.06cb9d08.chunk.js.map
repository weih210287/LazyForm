{"version":3,"sources":["Components/Common.js","Components/Inputs.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","Info","props","$mt10","$mt20","$my32","QuestionWrapper","$isEmpty","QuestionTitle","label","$required","QuestionInput","input","Option","Input","inputTitle","inputType","inputId","inputValue","isEmpty","inputPlaceholder","inputInfo","isRequired","onChange","htmlFor","type","id","name","value","placeholder","required","Radio","typeInfo","map","option","index","checked","isChecked","Submit","Form","useState","formInfo","setFormInfo","nicknameInput","setNicknameInput","emailInput","setEmailInput","phoneInput","setPhoneInput","options","typeInput","setTypeInput","motivationInput","setMotivationInput","otherInput","setOtherInput","e","target","newOptions","JSON","parse","stringify","optionIndex","handleTypeInput","onClick","preventDefault","every","alert","typeChecked","filter","nickname","email","phoneNumber","motivation","other","Footer","footer","Notice","p","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2NAEMA,EAAUC,IAAOC,IAAV,qOAUPC,EAAOF,IAAOC,IAAV,0GACE,SAACE,GAAD,OACRA,EAAMC,MACF,aACAD,EAAME,MACN,aACAF,EAAMG,OAAS,iB,OCfjBC,EAAkBP,IAAOC,IAAV,8HAIN,SAACE,GAAD,OAAYA,EAAMK,UAAY,UAMvCC,EAAgBT,IAAOU,MAAV,8EAIf,SAACP,GAAD,OACAA,EAAMQ,WAAN,0EASEC,EAAgBZ,IAAOa,MAAV,mHAObC,EAASd,IAAOU,MAAV,6CAINK,EAAQ,SAAC,GAUR,IATLC,EASI,EATJA,WACAC,EAQI,EARJA,UACAC,EAOI,EAPJA,QACAC,EAMI,EANJA,WACAC,EAKI,EALJA,QACAC,EAII,EAJJA,iBACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,WACAC,EACI,EADJA,SAEA,OACE,eAACjB,EAAD,CAAiBC,SAAUY,EAA3B,UACE,cAACX,EAAD,CAAegB,QAASP,EAASP,UAAWY,EAA5C,SACGP,IAEFM,EAAY,cAACpB,EAAD,CAAME,OAAK,EAAX,SAAakB,IAAoB,GAC9C,cAACV,EAAD,CACEc,KAAMT,EACNU,GAAIT,EACJU,KAAMT,EACNU,MAAOV,EACPW,YAAaT,EACbG,SAAUA,EACVO,UAAQ,IAETR,EAAa,iFAAkB,OAKhCS,EAAQ,SAAC,GAA6D,IAA3DC,EAA0D,EAA1DA,SAAUjB,EAAgD,EAAhDA,WAAYI,EAAoC,EAApCA,QAASG,EAA2B,EAA3BA,WAAYC,EAAe,EAAfA,SAC1D,OACE,eAACjB,EAAD,CAAiBC,SAAUY,EAA3B,UACE,cAACX,EAAD,CAAeE,UAAWY,EAA1B,SAAuCP,IACtCiB,EAASC,KAAI,SAACC,EAAQC,GACrB,OACE,gCACE,uBACEV,KAAK,QACLC,GAAE,aAAQQ,EAAOR,IACjBC,KAAK,SACLS,QAASF,EAAOG,UAChBd,SAAU,kBAAMA,EAASY,MAE3B,cAACtB,EAAD,CAAQW,QAAO,aAAQU,EAAOR,IAA9B,SAAqCQ,EAAON,UAR9C,aAAgBM,EAAOR,QAY1BJ,EAAa,iFAAkB,OClFhCgB,EAASvC,IAAOa,MAAV,mLAYRc,EAAK,EAEM,SAASa,IACtB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0CF,mBAAS,CACjDZ,MAAO,GACPT,SAAS,IAFX,mBAAOwB,EAAP,KAAsBC,EAAtB,KAIA,EAAoCJ,mBAAS,CAC3CZ,MAAO,GACPT,SAAS,IAFX,mBAAO0B,EAAP,KAAmBC,EAAnB,KAIA,EAAoCN,mBAAS,CAC3CZ,MAAO,GACPT,SAAS,IAFX,mBAAO4B,EAAP,KAAmBC,EAAnB,KAIA,EAAkCR,mBAAS,CACzCS,QAAS,CACP,CAAEvB,GAAI,EAAGE,MAAO,+DAAcS,WAAW,GACzC,CAAEX,GAAI,EAAGE,MAAO,qEAAeS,WAAW,IAE5ClB,SAAS,IALX,mBAAO+B,EAAP,KAAkBC,EAAlB,KAOA,EAA8CX,mBAAS,CACrDZ,MAAO,GACPT,SAAS,IAFX,mBAAOiC,EAAP,KAAwBC,EAAxB,KAIA,EAAoCb,mBAAS,CAC3CZ,MAAO,GACPT,SAAS,IAFX,mBAAOmC,EAAP,KAAmBC,EAAnB,KAsIA,OACE,iCACE,cAAC,EAAD,CACExC,WAAW,eACXC,UAAU,OACVC,QAAQ,WACRC,WAAYyB,EAAcf,MAC1BT,QAASwB,EAAcxB,QACvBC,iBAAiB,2BACjBE,YAAY,EACZC,SA3IsB,SAACiC,GAC3BZ,EAAiB,CACfhB,MAAO4B,EAAEC,OAAO7B,MAChBT,SAAS,OA0IT,cAAC,EAAD,CACEJ,WAAW,2BACXC,UAAU,QACVC,QAAQ,QACRC,WAAY2B,EAAWjB,MACvBT,QAAS0B,EAAW1B,QACpBC,iBAAiB,2BACjBE,YAAY,EACZC,SA9ImB,SAACiC,GACxBV,EAAc,CACZlB,MAAO4B,EAAEC,OAAO7B,MAChBT,SAAS,OA6IT,cAAC,EAAD,CACEJ,WAAW,2BACXC,UAAU,OACVC,QAAQ,QACRC,WAAY6B,EAAWnB,MACvBT,QAAS4B,EAAW5B,QACpBC,iBAAiB,uCACjBE,YAAY,EACZC,SAjJmB,SAACiC,GACxBR,EAAc,CACZpB,MAAO4B,EAAEC,OAAO7B,MAChBT,SAAS,OAgJT,cAAC,EAAD,CACEa,SAAUkB,EAAUD,QACpBlC,WAAW,2BACXI,QAAS+B,EAAU/B,QACnBG,YAAY,EACZC,SAAU,SAACY,GAAD,OAjJQ,SAACA,GACvB,IAAMuB,EAAaC,KAAKC,MAAMD,KAAKE,UAAUX,EAAUD,UACvDS,EAAWzB,KAAI,SAACC,EAAQ4B,GAMtB,OAJE5B,EAAOG,UADLyB,IAAgB3B,EAKbD,KAETiB,EAAa,2BACRD,GADO,IAEVD,QAASS,KAqIcK,CAAgB5B,MAEvC,cAAC,EAAD,CACEpB,WAAW,+DACXC,UAAU,OACVC,QAAQ,aACRC,WAAYkC,EAAgBxB,MAC5BT,QAASiC,EAAgBjC,QACzBC,iBAAiB,2BACjBE,YAAY,EACZC,SA3IwB,SAACiC,GAC7BH,EAAmB,CACjBzB,MAAO4B,EAAEC,OAAO7B,MAChBT,SAAS,OA0IT,cAAC,EAAD,CACEJ,WAAW,eACXC,UAAU,OACVC,QAAQ,aACRC,WAAYoC,EAAW1B,MACvBR,iBAAiB,2BACjBC,UAAU,mDACVC,YAAY,EACZC,SA9ImB,SAACiC,GACxBD,EAAc,CACZ3B,MAAO4B,EAAEC,OAAO7B,WA8IhB,cAACU,EAAD,CAAQb,KAAK,SAASG,MAAM,eAAKoC,QAtHhB,SAACR,GAIpB,GAHAA,EAAES,kBAICtB,EAAcf,QACdiB,EAAWjB,QACXmB,EAAWnB,QACXwB,EAAgBxB,OACjBsB,EAAUD,QAAQiB,OAAM,SAAChC,GAAD,OAAiC,IAArBA,EAAOG,aAE3C,OA9BF8B,MAAM,gCAEDxB,EAAcf,OACjBgB,EAAiB,2BAAKD,GAAN,IAAqBxB,SAAS,KAE3C0B,EAAWjB,OACdkB,EAAc,2BAAKD,GAAN,IAAkB1B,SAAS,KAErC4B,EAAWnB,OACdoB,EAAc,2BAAKD,GAAN,IAAkB5B,SAAS,KAEtC+B,EAAUD,QAAQiB,OAAM,SAAChC,GAAD,OAAiC,IAArBA,EAAOG,cAC7Cc,EAAa,2BAAKD,GAAN,IAAiB/B,SAAS,UAEnCiC,EAAgBxB,OACnByB,EAAmB,2BAAKD,GAAN,IAAuBjC,SAAS,MAkBpD,IAAMiD,EAAclB,EAAUD,QAAQoB,QACpC,SAACnC,GAAD,OAAiC,IAArBA,EAAOG,aAGrBK,EAAY,GAAD,mBACND,GADM,CAET,CACEf,GAAIA,IACJ4C,SAAU3B,EAAcf,MACxB2C,MAAO1B,EAAWjB,MAClB4C,YAAazB,EAAWnB,MACxBH,KAAM2C,EAAY,GAAGxC,MACrB6C,WAAYrB,EAAgBxB,MAC5B8C,MAAOpB,EAAW1B,UAItBgB,EAAiB,CACfhB,MAAO,GACPT,SAAS,IAEX2B,EAAc,CACZlB,MAAO,GACPT,SAAS,IAEX6B,EAAc,CACZpB,MAAO,GACPT,SAAS,IAEXgC,EAAa,CACXF,QAASC,EAAUD,QAAQhB,KAAI,SAACC,GAE9B,OADAA,EAAOG,WAAY,EACZH,KAETf,SAAS,IAEXkC,EAAmB,CACjBzB,MAAO,GACPT,SAAS,IAEXoC,EAAc,CACZ3B,MAAO,QAgEP,cAAC3B,EAAD,CAAMG,OAAK,EAAX,+FC1ON,IAAMuE,EAAS5E,IAAO6E,OAAV,oIAQNC,EAAS9E,IAAO+E,EAAV,2CAqBGC,MAjBf,WACE,OACE,gCACE,eAACjF,EAAD,WACE,8FACA,eAACG,EAAD,CAAMI,OAAK,EAAX,UACE,sFACA,iJAEF,cAACwE,EAAD,6BACA,cAACtC,EAAD,OAEF,cAACoC,EAAD,iEChBSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.06cb9d08.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 80px auto 150px;\r\n  padding: 40px 30px;\r\n  width: 645px;\r\n  text-align: left;\r\n  background: #ffffff;\r\n  border-top: 10px solid #fad312;\r\n  box-shadow: 1.8px 2.4px 5px 0 rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Info = styled.div`\r\n  margin: ${(props) =>\r\n    props.$mt10\r\n      ? \"10px 0 0 0\"\r\n      : props.$mt20\r\n      ? \"20px 0 0 0\"\r\n      : props.$my32 && \"30px 0 20px\"};\r\n  font-size: 1em;\r\n\r\n  & p + p {\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n\r\nexport { Wrapper, Info };\r\n","import styled from \"styled-components\";\r\nimport { Info } from \"./Common.js\";\r\n\r\nconst QuestionWrapper = styled.div`\r\n  margin-top: 50px;\r\n\r\n  & > p {\r\n    display: ${(props) => !props.$isEmpty && \"none\"};\r\n    margin-top: 10px;\r\n    color: red;\r\n  }\r\n`;\r\n\r\nconst QuestionTitle = styled.label`\r\n  display: block;\r\n  font-size: 1.17em;\r\n\r\n  ${(props) =>\r\n    props.$required &&\r\n    ` \r\n    &::after {\r\n      color: red;\r\n      content: \" *\"\r\n    }\r\n  `}\r\n`;\r\n\r\nconst QuestionInput = styled.input`\r\n  margin-top: 15px;\r\n  font-size: 1em;\r\n  padding: 3px;\r\n  border: solid 1px #d0d0d0;\r\n`;\r\n\r\nconst Option = styled.label`\r\n  padding: 8px;\r\n`;\r\n\r\nconst Input = ({\r\n  inputTitle,\r\n  inputType,\r\n  inputId,\r\n  inputValue,\r\n  isEmpty,\r\n  inputPlaceholder,\r\n  inputInfo,\r\n  isRequired,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <QuestionWrapper $isEmpty={isEmpty}>\r\n      <QuestionTitle htmlFor={inputId} $required={isRequired}>\r\n        {inputTitle}\r\n      </QuestionTitle>\r\n      {inputInfo ? <Info $mt10>{inputInfo}</Info> : \"\"}\r\n      <QuestionInput\r\n        type={inputType}\r\n        id={inputId}\r\n        name={inputValue}\r\n        value={inputValue}\r\n        placeholder={inputPlaceholder}\r\n        onChange={onChange}\r\n        required\r\n      />\r\n      {isRequired ? <p>此欄為不得為空！</p> : \"\"}\r\n    </QuestionWrapper>\r\n  );\r\n};\r\n\r\nconst Radio = ({ typeInfo, inputTitle, isEmpty, isRequired, onChange }) => {\r\n  return (\r\n    <QuestionWrapper $isEmpty={isEmpty}>\r\n      <QuestionTitle $required={isRequired}>{inputTitle}</QuestionTitle>\r\n      {typeInfo.map((option, index) => {\r\n        return (\r\n          <div key={`opt${option.id}`}>\r\n            <input\r\n              type=\"radio\"\r\n              id={`opt${option.id}`}\r\n              name=\"option\"\r\n              checked={option.isChecked}\r\n              onChange={() => onChange(index)}\r\n            />\r\n            <Option htmlFor={`opt${option.id}`}>{option.value}</Option>\r\n          </div>\r\n        );\r\n      })}\r\n      {isRequired ? <p>此欄為不得為空！</p> : \"\"}\r\n    </QuestionWrapper>\r\n  );\r\n};\r\n\r\nexport { Input, Radio };\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { Info } from \"./Components/Common.js\";\r\nimport { Input, Radio } from \"./Components/Inputs.js\";\r\n\r\nconst Submit = styled.input`\r\n  margin-top: 100px;\r\n  padding: 15px 30px;\r\n  background: #fad312;\r\n  border: none;\r\n  border-radius: 3px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nlet id = 1;\r\n\r\nexport default function Form() {\r\n  const [formInfo, setFormInfo] = useState(\"\");\r\n  const [nicknameInput, setNicknameInput] = useState({\r\n    value: \"\",\r\n    isEmpty: false,\r\n  });\r\n  const [emailInput, setEmailInput] = useState({\r\n    value: \"\",\r\n    isEmpty: false,\r\n  });\r\n  const [phoneInput, setPhoneInput] = useState({\r\n    value: \"\",\r\n    isEmpty: false,\r\n  });\r\n  const [typeInput, setTypeInput] = useState({\r\n    options: [\r\n      { id: 1, value: \"躺在床上用想像力實作\", isChecked: false },\r\n      { id: 2, value: \"趴在地上滑手機找現成的\", isChecked: false },\r\n    ],\r\n    isEmpty: false,\r\n  });\r\n  const [motivationInput, setMotivationInput] = useState({\r\n    value: \"\",\r\n    isEmpty: false,\r\n  });\r\n  const [otherInput, setOtherInput] = useState({\r\n    value: \"\",\r\n    isEmpty: false,\r\n  });\r\n\r\n  const handleNicknameInput = (e) => {\r\n    setNicknameInput({\r\n      value: e.target.value,\r\n      isEmpty: false,\r\n    });\r\n  };\r\n\r\n  const handleEmailInput = (e) => {\r\n    setEmailInput({\r\n      value: e.target.value,\r\n      isEmpty: false,\r\n    });\r\n  };\r\n\r\n  const handlePhoneInput = (e) => {\r\n    setPhoneInput({\r\n      value: e.target.value,\r\n      isEmpty: false,\r\n    });\r\n  };\r\n\r\n  const handleTypeInput = (index) => {\r\n    const newOptions = JSON.parse(JSON.stringify(typeInput.options));\r\n    newOptions.map((option, optionIndex) => {\r\n      if (optionIndex === index) {\r\n        option.isChecked = true;\r\n      } else {\r\n        option.isChecked = false;\r\n      }\r\n      return option;\r\n    });\r\n    setTypeInput({\r\n      ...typeInput,\r\n      options: newOptions,\r\n    });\r\n  };\r\n\r\n  const handleMotivationInput = (e) => {\r\n    setMotivationInput({\r\n      value: e.target.value,\r\n      isEmpty: false,\r\n    });\r\n  };\r\n\r\n  const handleOtherInput = (e) => {\r\n    setOtherInput({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  const checkEmpty = () => {\r\n    alert(\"Please fill in all required!\");\r\n\r\n    if (!nicknameInput.value) {\r\n      setNicknameInput({ ...nicknameInput, isEmpty: true });\r\n    }\r\n    if (!emailInput.value) {\r\n      setEmailInput({ ...emailInput, isEmpty: true });\r\n    }\r\n    if (!phoneInput.value) {\r\n      setPhoneInput({ ...phoneInput, isEmpty: true });\r\n    }\r\n    if (typeInput.options.every((option) => option.isChecked === false)) {\r\n      setTypeInput({ ...typeInput, isEmpty: true });\r\n    }\r\n    if (!motivationInput.value) {\r\n      setMotivationInput({ ...motivationInput, isEmpty: true });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // 檢查必填是否為空值\r\n    if (\r\n      !nicknameInput.value ||\r\n      !emailInput.value ||\r\n      !phoneInput.value ||\r\n      !motivationInput.value ||\r\n      typeInput.options.every((option) => option.isChecked === false)\r\n    )\r\n      return checkEmpty();\r\n\r\n    // 處理勾選的 type\r\n    const typeChecked = typeInput.options.filter(\r\n      (option) => option.isChecked === true\r\n    );\r\n\r\n    setFormInfo([\r\n      ...formInfo,\r\n      {\r\n        id: id++,\r\n        nickname: nicknameInput.value,\r\n        email: emailInput.value,\r\n        phoneNumber: phoneInput.value,\r\n        type: typeChecked[0].value,\r\n        motivation: motivationInput.value,\r\n        other: otherInput.value,\r\n      },\r\n    ]);\r\n\r\n    setNicknameInput({\r\n      value: \"\",\r\n      isEmpty: false,\r\n    });\r\n    setEmailInput({\r\n      value: \"\",\r\n      isEmpty: false,\r\n    });\r\n    setPhoneInput({\r\n      value: \"\",\r\n      isEmpty: false,\r\n    });\r\n    setTypeInput({\r\n      options: typeInput.options.map((option) => {\r\n        option.isChecked = false;\r\n        return option;\r\n      }),\r\n      isEmpty: false,\r\n    });\r\n    setMotivationInput({\r\n      value: \"\",\r\n      isEmpty: false,\r\n    });\r\n    setOtherInput({\r\n      value: \"\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <Input\r\n        inputTitle=\"暱稱\"\r\n        inputType=\"text\"\r\n        inputId=\"nickname\"\r\n        inputValue={nicknameInput.value}\r\n        isEmpty={nicknameInput.isEmpty}\r\n        inputPlaceholder=\"您的暱稱\"\r\n        isRequired={true}\r\n        onChange={handleNicknameInput}\r\n      />\r\n      <Input\r\n        inputTitle=\"電子郵件\"\r\n        inputType=\"email\"\r\n        inputId=\"email\"\r\n        inputValue={emailInput.value}\r\n        isEmpty={emailInput.isEmpty}\r\n        inputPlaceholder=\"您的信箱\"\r\n        isRequired={true}\r\n        onChange={handleEmailInput}\r\n      />\r\n      <Input\r\n        inputTitle=\"手機號碼\"\r\n        inputType=\"text\"\r\n        inputId=\"phone\"\r\n        inputValue={phoneInput.value}\r\n        isEmpty={phoneInput.isEmpty}\r\n        inputPlaceholder=\"您的手機號碼\"\r\n        isRequired={true}\r\n        onChange={handlePhoneInput}\r\n      />\r\n      <Radio\r\n        typeInfo={typeInput.options}\r\n        inputTitle=\"報名類型\"\r\n        isEmpty={typeInput.isEmpty}\r\n        isRequired={true}\r\n        onChange={(index) => handleTypeInput(index)}\r\n      />\r\n      <Input\r\n        inputTitle=\"怎麼知道這個活動的？\"\r\n        inputType=\"text\"\r\n        inputId=\"motivation\"\r\n        inputValue={motivationInput.value}\r\n        isEmpty={motivationInput.isEmpty}\r\n        inputPlaceholder=\"您的回答\"\r\n        isRequired={true}\r\n        onChange={handleMotivationInput}\r\n      />\r\n      <Input\r\n        inputTitle=\"其他\"\r\n        inputType=\"text\"\r\n        inputId=\"suggestion\"\r\n        inputValue={otherInput.value}\r\n        inputPlaceholder=\"您的回答\"\r\n        inputInfo=\"對活動的一些建議\"\r\n        isRequired={false}\r\n        onChange={handleOtherInput}\r\n      />\r\n      <Submit type=\"submit\" value=\"提交\" onClick={handleSubmit} />\r\n      <Info $mt20>請勿透過表單送出您的密碼。</Info>\r\n    </form>\r\n  );\r\n}\r\n","import Form from \"./Form.js\";\nimport styled from \"styled-components\";\nimport { Wrapper, Info } from \"./Components/Common.js\";\n\nconst Footer = styled.footer`\n  padding: 15px 0;\n  font-size: 0.9em;\n  text-align: center;\n  color: #999999;\n  background: #000;\n`;\n\nconst Notice = styled.p`\n  color: red;\n`;\n\nfunction App() {\n  return (\n    <div>\n      <Wrapper>\n        <h1>新拖延症運動報名表單</h1>\n        <Info $my32>\n          <p>活動日期：2020/12/10 ~ 2020/12/11</p>\n          <p>活動地點：台北市大安區新生南路二段1號</p>\n        </Info>\n        <Notice>* 必填</Notice>\n        <Form />\n      </Wrapper>\n      <Footer>© 2020 © Copyright. All rights Reserved.</Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}